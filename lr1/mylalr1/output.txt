---------------------------
expresion:
0. expr' -> expr $ 
1. expr -> expr + term 
2. expr -> expr - term 
3. expr -> term 
4. term -> term * factor 
5. term -> term / factor 
6. term -> factor 
7. factor -> ( expr ) 
8. factor -> num 
9. factor -> - factor 
---------------------------
nonterminal set:
expr
term
factor
expr'
---------------------------
terminal set:
+
-
*
/
(
)
num
$
---------------------------
nullable set:

---------------------------
first set:
expr : ( num - 
term : ( num - 
factor : ( num - 
expr' : ( num - 

---------------------------
lr state set:
state0 : 
expr' -> • expr $ [ ] 
expr -> • expr + term [ $ + - ] 
expr -> • expr - term [ $ + - ] 
expr -> • term [ $ + - ] 
term -> • term * factor [ $ + - * / ] 
term -> • term / factor [ $ + - * / ] 
term -> • factor [ $ + - * / ] 
factor -> • ( expr ) [ $ + - * / ] 
factor -> • num [ $ + - * / ] 
factor -> • - factor [ $ + - * / ] 
state1 : 
expr' ->  expr• $ [ ] 
expr ->  expr• + term [ $ + - ] 
expr ->  expr• - term [ $ + - ] 
state2 : 
expr ->  term • [ $ + - ) ] 
term ->  term• * factor [ $ + - * / ) ] 
term ->  term• / factor [ $ + - * / ) ] 
state3 : 
term ->  factor • [ $ + - * / ) ] 
state4 : 
factor ->  (• expr ) [ $ + - * / ) ] 
expr -> • expr + term [ ) + - ] 
expr -> • expr - term [ ) + - ] 
expr -> • term [ ) + - ] 
term -> • term * factor [ ) + - * / ] 
term -> • term / factor [ ) + - * / ] 
term -> • factor [ ) + - * / ] 
factor -> • ( expr ) [ ) + - * / ] 
factor -> • num [ ) + - * / ] 
factor -> • - factor [ ) + - * / ] 
state5 : 
factor ->  num • [ $ + - * / ) ] 
state6 : 
factor ->  -• factor [ $ + - * / ) ] 
factor -> • ( expr ) [ $ + - * / ) ] 
factor -> • num [ $ + - * / ) ] 
factor -> • - factor [ $ + - * / ) ] 
state7 : 
expr ->  expr +• term [ $ + - ) ] 
term -> • term * factor [ $ + - * / ) ] 
term -> • term / factor [ $ + - * / ) ] 
term -> • factor [ $ + - * / ) ] 
factor -> • ( expr ) [ $ + - * / ) ] 
factor -> • num [ $ + - * / ) ] 
factor -> • - factor [ $ + - * / ) ] 
state8 : 
expr ->  expr -• term [ $ + - ) ] 
term -> • term * factor [ $ + - * / ) ] 
term -> • term / factor [ $ + - * / ) ] 
term -> • factor [ $ + - * / ) ] 
factor -> • ( expr ) [ $ + - * / ) ] 
factor -> • num [ $ + - * / ) ] 
factor -> • - factor [ $ + - * / ) ] 
state9 : 
term ->  term *• factor [ $ + - * / ) ] 
factor -> • ( expr ) [ $ + - * / ) ] 
factor -> • num [ $ + - * / ) ] 
factor -> • - factor [ $ + - * / ) ] 
state10 : 
term ->  term /• factor [ $ + - * / ) ] 
factor -> • ( expr ) [ $ + - * / ) ] 
factor -> • num [ $ + - * / ) ] 
factor -> • - factor [ $ + - * / ) ] 
state11 : 
factor ->  ( expr• ) [ $ + - * / ) ] 
expr ->  expr• + term [ ) + - ] 
expr ->  expr• - term [ ) + - ] 
state12 : 
factor ->  - factor • [ $ + - * / ) ] 
state13 : 
expr ->  expr + term • [ $ + - ) ] 
term ->  term• * factor [ $ + - * / ) ] 
term ->  term• / factor [ $ + - * / ) ] 
state14 : 
expr ->  expr - term • [ $ + - ) ] 
term ->  term• * factor [ $ + - * / ) ] 
term ->  term• / factor [ $ + - * / ) ] 
state15 : 
term ->  term * factor • [ $ + - * / ) ] 
state16 : 
term ->  term / factor • [ $ + - * / ) ] 
state17 : 
factor ->  ( expr ) • [ $ + - * / ) ] 
---------------------------
lr action table:
STATE 	expr	+	term	-	*	factor	/	(	)	num	$	expr'	
0	G1	-	G2	S6	-	G3	-	S4	-	S5	-	-	
1	-	S7	-	S8	-	-	-	-	-	-	accept	-	
2	-	R3	-	R3	S9	-	S10	-	R3	-	R3	-	
3	-	R6	-	R6	R6	-	R6	-	R6	-	R6	-	
4	G11	-	G11	S11	-	G11	-	S11	-	S11	-	-	
5	-	R8	-	R8	R8	-	R8	-	R8	-	R8	-	
6	-	-	-	S12	-	G12	-	S12	-	S12	-	-	
7	-	-	G13	S13	-	G13	-	S13	-	S13	-	-	
8	-	-	G14	S14	-	G14	-	S14	-	S14	-	-	
9	-	-	-	S15	-	G15	-	S15	-	S15	-	-	
10	-	-	-	S16	-	G16	-	S16	-	S16	-	-	
11	-	S17	-	S17	-	-	-	-	S17	-	-	-	
12	-	R9	-	R9	R9	-	R9	-	R9	-	R9	-	
13	-	R1	-	R1	S17	-	S17	-	R1	-	R1	-	
14	-	R2	-	R2	S17	-	S17	-	R2	-	R2	-	
15	-	R4	-	R4	R4	-	R4	-	R4	-	R4	-	
16	-	R5	-	R5	R5	-	R5	-	R5	-	R5	-	
17	-	R7	-	R7	R7	-	R7	-	R7	-	R7	-	
